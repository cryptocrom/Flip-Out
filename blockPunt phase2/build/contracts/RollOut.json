{
  "contractName": "RollOut",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBet",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balanceBeforeBet",
          "type": "uint256"
        }
      ],
      "name": "BetPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "ContractBalanceWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountDeposited",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "ContractDepositMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "houseCard",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "userCard",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "choseHigher",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payOutAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "winner",
          "type": "string"
        }
      ],
      "name": "DrawOutResults",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "latestNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Heads1orTails0",
          "type": "uint256"
        }
      ],
      "name": "FlipNumberReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "flipResult",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "choice",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "winner",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payOutAmount",
          "type": "uint256"
        }
      ],
      "name": "FlipOutResults",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "latestNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "houseCard",
          "type": "uint256"
        }
      ],
      "name": "HouseCard_Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "PlayerFundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "latestNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "diceNumber",
          "type": "uint256"
        }
      ],
      "name": "RollNumberReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rollResult",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "choice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "winner",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payOutAmount",
          "type": "uint256"
        }
      ],
      "name": "RollOutResults",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "latestNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "userCard",
          "type": "uint256"
        }
      ],
      "name": "UserCard_Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountDeposited",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "UserDepositMade",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "Destroy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addBettingFunds",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gameRef",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "choice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "queryPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cards",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "houseCard",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "cardId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "waiting",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositToContract",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "freeCallBack",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "punter",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "query_id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "game",
          "type": "uint256"
        }
      ],
      "name": "payOut",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "punters",
      "outputs": [
        {
          "internalType": "address",
          "name": "playerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pendingBets",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "latestQueryId",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "punter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gameRef",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "choice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "query_price",
          "type": "uint256"
        }
      ],
      "name": "requestNumber",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBettingFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawContractBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToBet",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "betChoice",
          "type": "uint256"
        }
      ],
      "name": "rollIt",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBet\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceBeforeBet\",\"type\":\"uint256\"}],\"name\":\"BetPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"name\":\"ContractBalanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"ContractDepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"houseCard\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userCard\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"choseHigher\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payOutAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"winner\",\"type\":\"string\"}],\"name\":\"DrawOutResults\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"latestNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Heads1orTails0\",\"type\":\"uint256\"}],\"name\":\"FlipNumberReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"flipResult\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"choice\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"winner\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payOutAmount\",\"type\":\"uint256\"}],\"name\":\"FlipOutResults\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"latestNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"houseCard\",\"type\":\"uint256\"}],\"name\":\"HouseCard_Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"name\":\"PlayerFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"latestNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"diceNumber\",\"type\":\"uint256\"}],\"name\":\"RollNumberReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rollResult\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"choice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"winner\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payOutAmount\",\"type\":\"uint256\"}],\"name\":\"RollOutResults\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"latestNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userCard\",\"type\":\"uint256\"}],\"name\":\"UserCard_Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"UserDepositMade\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"Destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addBettingFunds\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gameRef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"choice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cards\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"houseCard\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"cardId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"waiting\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositToContract\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freeCallBack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"punter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"query_id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"game\",\"type\":\"uint256\"}],\"name\":\"payOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"punters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"playerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingBets\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"latestQueryId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"punter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gameRef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"choice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"query_price\",\"type\":\"uint256\"}],\"name\":\"requestNumber\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToBet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"betChoice\",\"type\":\"uint256\"}],\"name\":\"rollIt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBettingFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawContractBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/RollOut.sol\":\"RollOut\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Accountable.sol\":{\"keccak256\":\"0x2d023141e1862bb6fec35da6c4d7d46818a724689128e78b249b28277725c333\",\"urls\":[\"bzz-raw://982e297d3c20b704b838c0578f97d84a05599a39584054576104fa87ba7396e0\",\"dweb:/ipfs/QmPXnZwwEx7R8cakZtkBabL4jZjdoeqE5J4X4txyGyK3N7\"]},\"/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Destroyable.sol\":{\"keccak256\":\"0x8a8ffce2d1dc7f152bd4997e6fabbf1e61f213ab5be0ea222cf9d3fc606439c9\",\"urls\":[\"bzz-raw://86e47bd7621c6192a64f9f63ec26fa75b231ed271b6bd3e25b9003bcdee37a98\",\"dweb:/ipfs/QmTCdgcioREtXuG2CAHkrh8viWAzDFY4ubr6tiywmNojsJ\"]},\"/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Ownable.sol\":{\"keccak256\":\"0xe21f6d407c763f331b482fdf0f65233d0c4b24041dc7c1116b09c471cd77f906\",\"urls\":[\"bzz-raw://d18eea993e9ac1f0d0c16f2be20728dc9f580457fcbde9ad0d6ce96cd9c8c124\",\"dweb:/ipfs/QmYcWqETTanjwFMTBH8JG3VD2NTW5o3xhAyGmDbfJv7qth\"]},\"/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Randomised.sol\":{\"keccak256\":\"0x8c8e29f8c2bf9ddffeb1b6c1f9540f668272bb1c53dcd812befa7e83719fd1a5\",\"urls\":[\"bzz-raw://81369a6db5ab526a7b8c32d3b0dedf278d77fa5a4878e155203910c166fc078c\",\"dweb:/ipfs/QmcWxzEiHbYF5D9zQXeX3pPq6pd52dsUyYhSpHvnKpJJEf\"]},\"/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/RollOut.sol\":{\"keccak256\":\"0xd4830f02020daa0b8aefe516d8ee06edefeabb83ada3caa41430f4de22895b7b\",\"urls\":[\"bzz-raw://8238c6afbfc017fdf06c728f2a5ab0ac44e9198eef24209a97e33330ad6b9132\",\"dweb:/ipfs/QmTrXjicNuNkm4dZgyvH69rZvuksQUbvaGMzz5nvQLJNNn\"]},\"/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Winnable.sol\":{\"keccak256\":\"0x23f7864bcca52d64fe30ade564d533944008780c32eff60e74f28b044a2c0534\",\"urls\":[\"bzz-raw://c07b8b47a35bb6f46465b64d6eef77169b6047cabbbed02f6eb90f2403c7d707\",\"dweb:/ipfs/QmQXJsEP1yEzCK2bGWogJQcww3dCT1r8gTS1ExBcxPUHdi\"]},\"/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/provableAPI.sol\":{\"keccak256\":\"0x6eeb157a3fedf63d17f42ad7d8a774616d9e5bd594c1ace8e1d07a9336fc85d8\",\"urls\":[\"bzz-raw://baa2c608eb561d1dc7deb5473518128f929c85c314bf886c945b64a6d120c5c5\",\"dweb:/ipfs/QmXdY3eGzDZVdqHMUcnnhFaQVvWKWGHxvAZjjJBXA9tDPi\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600860006101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614d5a8061006e6000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063c902c3ae11610059578063c902c3ae146105b0578063cafc419f14610655578063df11460e146106fb578063f58fef8e14610705576100e8565b80638da5cb5b146104c95780639745cd1f14610520578063bfab3db91461058f578063c8f781c2146105a6576100e8565b806327dc297e116100c657806327dc297e1461019f57806338bbfa50146102715780634cf5350a146103da57806370908f211461041f576100e8565b80630eee99cf146100ed5780631a1cc0a5146101045780631b76946614610133575b600080fd5b3480156100f957600080fd5b5061010261071c565b005b34801561011057600080fd5b506101196108fb565b604051808215151515815260200191505060405180910390f35b61019d600480360360a081101561014957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061090e565b005b3480156101ab57600080fd5b5061026f600480360360408110156101c257600080fd5b8101908080359060200190929190803590602001906401000000008111156101e957600080fd5b8201836020820111156101fb57600080fd5b8035906020019184600183028401116401000000008311171561021d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b2d565b005b34801561027d57600080fd5b506103d86004803603606081101561029457600080fd5b8101908080359060200190929190803590602001906401000000008111156102bb57600080fd5b8201836020820111156102cd57600080fd5b803590602001918460018302840111640100000000831117156102ef57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561035257600080fd5b82018360208201111561036457600080fd5b8035906020019184600183028401116401000000008311171561038657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f3b565b005b3480156103e657600080fd5b5061041d600480360360408110156103fd57600080fd5b810190808035906020019092919080359060200190929190505050610f5e565b005b34801561042b57600080fd5b5061046e6004803603602081101561044257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111f6565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018215151515815260200194505050505060405180910390f35b3480156104d557600080fd5b506104de611253565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052c57600080fd5b5061058d6004803603608081101561054357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050611278565b005b34801561059b57600080fd5b506105a4612244565b005b6105ae612365565b005b3480156105bc57600080fd5b506105e9600480360360208110156105d357600080fd5b81019080803590602001909291905050506124a7565b604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b34801561066157600080fd5b506106a46004803603602081101561067857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612509565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b610703612559565b005b34801561071157600080fd5b5061071a61288f565b005b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108a9573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fdc13ef7ce79641e7f89a0adb1f73831b0832805639eefe811c8173e09751306d826040518082815260200191505060405180910390a250565b600860009054906101000a900460ff1681565b6000801515600860009054906101000a900460ff161515141561093357819050610953565b600090506000600860006101000a81548160ff0219169083151502179055505b6000809050600061096982600162030d40612901565b9050610973614ba8565b8181600001818152505088816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050878160400181815250508681606001818152505085816080018181525050838160a00181815250508060c001515080600b60008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015590505080600001518973ffffffffffffffffffffffffffffffffffffffff167f680397c45077ee300a8ffc23b8df8f67de5ada41abab7430a35945e03c283cb3836060015160096000866020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a3505050505050505050565b610b35612e9c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b6c57600080fd5b6000600b600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000826040516020018082805190602001908083835b60208310610c275780518252602082019150602081019050602083039250610c04565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c90506001600b6000868152602001908152602001600020600201541415610d555760028181610c9057fe5b06600b600086815260200190815260200160002060060181905550610ce38285600b600088815260200190815260200160002060060154600b600089815260200190815260200160002060020154611278565b838273ffffffffffffffffffffffffffffffffffffffff167f3e0b428f99f88317a267eb30f49f168a7d82cb56220b5e3c4ebfba8c71c4dfca83600b600089815260200190815260200160002060060154604051808381526020018281526020019250505060405180910390a3610f35565b6002600b6000868152602001908152602001600020600201541415610e4657600160068281610d8057fe5b0601600b600086815260200190815260200160002060060181905550610dd48285600b600088815260200190815260200160002060060154600b600089815260200190815260200160002060020154611278565b838273ffffffffffffffffffffffffffffffffffffffff167f4abcbda462a94726d98871d89dc3d68df4c87af956c88bff9e26eb6fd8f8d24983600b600089815260200190815260200160002060060154604051808381526020018281526020019250505060405180910390a3610f34565b6003600b6000868152602001908152602001600020600201541415610f33576001600d8281610e7157fe5b0601600b600086815260200190815260200160002060060181905550610ec58285600b600088815260200190815260200160002060060154600b600089815260200190815260200160002060020154611278565b838273ffffffffffffffffffffffffffffffffffffffff167f10426ca2b14c787eb34a20cb459b266c77e6c79ac3eedb0972e4bbf26510ffc783600b600089815260200190815260200160002060060154604051808381526020018281526020019250505060405180910390a35b5b5b50505050565b6000801b600460008060001b815260200190815260200160002081905550505050565b60018110158015610f70575060068111155b610fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d7573742063686f6f7365206265747765656e203120616e642036000000000081525060200191505060405180910390fd5b600066038d7ea4c68000830290506000610ffa6131bc565b9050808201600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101540310156110fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e6f7420656e6f756768206c697175696469747900000000000000000000000081525060200191505060405180910390fd5b80600683020160075460065403101561117b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f436f6e74726163742063616e6e6f7420636f766572206265740000000000000081525060200191505060405180910390fd5b806006830201600760008282540192505081905550808201600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825401925050819055506111f033600284868561090e565b50505050565b600a6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60008581526020019081526020016000206003015490506000600b60008681526020019081526020016000206005015490508160066000828254019250508190555081600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825403925050819055506001831415611830576000600283029050600b6000878152602001908152602001600020600401548514156115b75780600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254019250508190555081810160066000828254039250508190555060018514156114af57858773ffffffffffffffffffffffffffffffffffffffff167f0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c858460405180806020018060200180602001868152602001858152602001848103845260058152602001807f4865616473000000000000000000000000000000000000000000000000000000815250602001848103835260058152602001807f4865616473000000000000000000000000000000000000000000000000000000815250602001848103825260068152602001807f506c6179657200000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a36115b2565b858773ffffffffffffffffffffffffffffffffffffffff167f0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c858460405180806020018060200180602001868152602001858152602001848103845260058152602001807f5461696c73000000000000000000000000000000000000000000000000000000815250602001848103835260058152602001807f5461696c73000000000000000000000000000000000000000000000000000000815250602001848103825260068152602001807f506c6179657200000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a35b61181b565b81600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550600185141561171757858773ffffffffffffffffffffffffffffffffffffffff167f0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c858660405180806020018060200180602001868152602001858152602001848103845260058152602001807f4865616473000000000000000000000000000000000000000000000000000000815250602001848103835260058152602001807f5461696c73000000000000000000000000000000000000000000000000000000815250602001848103825260058152602001807f486f7573650000000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a361181a565b858773ffffffffffffffffffffffffffffffffffffffff167f0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c858660405180806020018060200180602001868152602001858152602001848103845260058152602001807f5461696c73000000000000000000000000000000000000000000000000000000815250602001848103835260058152602001807f4865616473000000000000000000000000000000000000000000000000000000815250602001848103825260058152602001807f486f7573650000000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a35b5b60028302600760008282540392505081905550505b6002831415611a98576000600683029050600b60008781526020019081526020016000206004015485141561197c5780600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540192505081905550818101600660008282540392505081905550858773ffffffffffffffffffffffffffffffffffffffff167ff0f1a71001487cdd2b5333e3fe895c9deb3fd1ed644fc1563fd75591b714062a87600b60008b81526020019081526020016000206004015487866040518085815260200184815260200180602001848152602001838152602001828103825260068152602001807f506c6179657200000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a3611a83565b81600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550858773ffffffffffffffffffffffffffffffffffffffff167ff0f1a71001487cdd2b5333e3fe895c9deb3fd1ed644fc1563fd75591b714062a87600b60008b81526020019081526020016000206004015487886040518085815260200184815260200180602001848152602001838152602001828103825260058152602001807f486f7573650000000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a35b60068302600760008282540392505081905550505b60038314156121ec5760011515600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16151514611b6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4d7573742062652077616974696e67000000000000000000000000000000000081525060200191505060405180910390fd5b6000801b600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015411611c24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d757374206861766520686f757365636172642069640000000000000000000081525060200191505060405180910390fd5b6000801b600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506000600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060006001600b6000898152602001908152602001600020600401541415611d7e57600190505b6000600b6000898152602001908152602001600020600401541415611da257600090505b60006002831415611dd157600115158215151415611dc557600b85029050611dcc565b6082850290505b611f80565b6003831415611dfe57600115158215151415611df257600d85029050611df9565b6041850290505b611f7f565b6004831415611e2b57600115158215151415611e1f57600e85029050611e26565b602a850290505b611f7e565b6005831415611e5857600115158215151415611e4c57601085029050611e53565b6020850290505b611f7d565b6006831415611e8557600115158215151415611e7957601285029050611e80565b601a850290505b611f7c565b6007831415611e9957601585029050611f7b565b6008831415611ec657600115158215151415611eba57601a85029050611ec1565b6012850290505b611f7a565b6009831415611ef357600115158215151415611ee757602085029050611eee565b6010850290505b611f79565b600a831415611f2057600115158215151415611f1457602a85029050611f1b565b600e850290505b611f78565b600b831415611f4d57600115158215151415611f4157604185029050611f48565b600d850290505b611f77565b600c831415611f7657600115158215151415611f6e57608285029050611f75565b600b850290505b5b5b5b5b5b5b5b5b5b5b5b6000879050600a8281611f8f57fe5b04915060011515831515148015611fa557508381115b80611fbf575060001515831515148015611fbe57508381105b5b156120d75781600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540192505081905550848201600660008282540392505081905550888a73ffffffffffffffffffffffffffffffffffffffff167f3f49e8a1c02bb092374df7b4bf984f5f1e89085d4745000dd2d8507511083b068684878b88604051808681526020018581526020018415151515815260200183815260200182815260200180602001828103825260068152602001807f506c617965720000000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a36121d4565b84600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550888a73ffffffffffffffffffffffffffffffffffffffff167f3f49e8a1c02bb092374df7b4bf984f5f1e89085d4745000dd2d8507511083b068684878b8c604051808681526020018581526020018415151515815260200183815260200182815260200180602001828103825260058152602001807f486f757365000000000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a35b600d8602600760008282540392505081905550505050505b81600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282540392505081905550505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461229d57600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156122f2573d6000803e3d6000fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f9ca86e26e8d02952f920895df7583aa717e8ebc63cd0708c0879da89b9a07445826040518082815260200191505060405180910390a250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146123be57600080fd5b66470de4df8200008034101561243c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f32302066696e6e6579206d696e696d756d00000000000000000000000000000081525060200191505060405180910390fd5b346006600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f350a7000a835544193f030ad53ca1f667390855a6373fd43a2a998c98bfbf85634600654604051808381526020018281526020019250505060405180910390a250565b600b6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060154905087565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b66038d7ea4c68000803410156125d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f312066696e6e6579206d696e696d756d0000000000000000000000000000000081525060200191505060405180910390fd5b6125df614bfe565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154816020018181525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154816040018181525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015481606001818152505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015590505034600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f155efc6f27878074d7b21fde35c660b361cb83869a21c2409ed1a562f17e172934600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a25050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146128e857600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b60008083118015612913575060208311155b61291c57600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156129585781602001600182028038833980820191505090505b5090508360f81b8160008151811061296c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156129d15781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015612a0a5781602001600182028038833980820191505090505b5090506000612a17613205565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015612a6b5781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015612aaa5781602001600182028038833980820191505090505b509050612abd8260186008846000613525565b50612ac6614c3f565b60405180608001604052808781526020018881526020018681526020018481525090506000612b2b6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c613584565b9050606060086040519080825280601f01601f191660200182016040528015612b635781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350612e89828285600160048110612ca257fe5b6020020151600287600060048110612cb657fe5b60200201516040518082805190602001908083835b60208310612cee5780518252602082019150602081019050602083039250612ccb565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612d30573d6000803e3d6000fd5b5050506040513d6020811015612d4557600080fd5b810190808051906020019092919050505087600260048110612d6357fe5b60200201516040516020018085805190602001908083835b60208310612d9e5780518252602082019150602081019050602083039250612d7b565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310612def5780518252602082019150602081019050602083039250612dcc565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310612e465780518252602082019150602081019050602083039250612e23565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052805190602001206138f3565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612f2457506000612f22600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b15612f3557612f33600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612f9f57600080fd5b505af1158015612fb3573d6000803e3d6000fd5b505050506040513d6020811015612fc957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461311457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561309857600080fd5b505af11580156130ac573d6000803e3d6000fd5b505050506040513d60208110156130c257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561317c57600080fd5b505afa158015613190573d6000803e3d6000fd5b505050506040513d60208110156131a657600080fd5b8101908080519060200190929190505050905090565b60006132006040518060400160405280600581526020017f707269636500000000000000000000000000000000000000000000000000000081525062030d4061392b565b905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061328d5750600061328b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b1561329e5761329c600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561330857600080fd5b505af115801561331c573d6000803e3d6000fd5b505050506040513d602081101561333257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461347d57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561340157600080fd5b505af1158015613415573d6000803e3d6000fd5b505050506040513d602081101561342b57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156134e557600080fd5b505afa1580156134f9573d6000803e3d6000fd5b505050506040513d602081101561350f57600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561353c57600080fd5b600086602001905060008460200190505b868860200101821015613575578189015180828801525060208201915060208101905061354d565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061360c5750600061360a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b1561361d5761361b600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561368757600080fd5b505af115801561369b573d6000803e3d6000fd5b505050506040513d60208110156136b157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146137fc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561378057600080fd5b505af1158015613794573d6000803e3d6000fd5b505050506040513d60208110156137aa57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561383357816020015b606081526020019060019003908161381e5790505b5090508360006004811061384357fe5b60200201518160008151811061385557fe5b60200260200101819052508360016004811061386d57fe5b60200201518160018151811061387f57fe5b60200260200101819052508360026004811061389757fe5b6020020151816002815181106138a957fe5b6020026020010181905250836003600481106138c157fe5b6020020151816003815181106138d357fe5b60200260200101819052506138e9858285613cc8565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b6000813b9050919050565b600061392461422e565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806139b3575060006139b1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b156139c4576139c2600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613a2e57600080fd5b505af1158015613a42573d6000803e3d6000fd5b505050506040513d6020811015613a5857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ba357600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b2757600080fd5b505af1158015613b3b573d6000803e3d6000fd5b505050506040513d6020811015613b5157600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015613c38578082015181840152602081019050613c1d565b50505050905090810190601f168015613c655780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015613c8557600080fd5b505af1158015613c99573d6000803e3d6000fd5b505050506040513d6020811015613caf57600080fd5b8101908080519060200190929190505050905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480613d5057506000613d4e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b15613d6157613d5f600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613dcb57600080fd5b505af1158015613ddf573d6000803e3d6000fd5b505050506040513d6020811015613df557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613f4057600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613ec457600080fd5b505af1158015613ed8573d6000803e3d6000fd5b505050506040513d6020811015613eee57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015613fd7578082015181840152602081019050613fbc565b50505050905090810190601f1680156140045780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561402457600080fd5b505af1158015614038573d6000803e3d6000fd5b505050506040513d602081101561404e57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115614081576000801b915050614227565b606061408c85614785565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015614131578082015181840152602081019050614116565b50505050905090810190601f16801561415e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561419757808201518184015260208101905061417c565b50505050905090810190601f1680156141c45780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156141e657600080fd5b505af11580156141fa573d6000803e3d6000fd5b50505050506040513d602081101561421157600080fd5b8101908080519060200190929190505050925050505b9392505050565b60008061424e731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61390f565b11156142f057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506142e76040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250614805565b60019050614782565b600061430f73c03a2615d5efaf5f49f60b7bb6583eaec212fdf161390f565b11156143b15773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506143a86040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250614805565b60019050614782565b60006143d073b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61390f565b11156144725773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506144696040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250614805565b60019050614782565b600061449173146500cfd35b22e4a392fe0adc06de1a1368ed4861390f565b11156145335773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061452a6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250614805565b60019050614782565b600061455273a2998efd205fb9d4b4963afb70778d6354ad3a4161390f565b11156145f45773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506145eb6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250614805565b60019050614782565b6000614613736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561390f565b111561467757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050614782565b60006146967320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61390f565b11156146fa577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050614782565b60006147197351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61390f565b111561477d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050614782565b600090505b90565b606061478f61481f565b614797614c66565b6147a38161040061482b565b6147ac81614875565b60008090505b83518110156147ee576147e18482815181106147ca57fe5b60200260200101518361488390919063ffffffff16565b80806001019150506147b2565b506147f8816148a8565b8060000151915050919050565b806003908051906020019061481b929190614c80565b5050565b60405180590338823950565b600081905060006020828161483c57fe5b0614614855576020818161484c57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b6148808160046148b6565b50565b61489082600283516148d7565b6148a38183614a1790919063ffffffff16565b505050565b6148b38160076148b6565b50565b6148d3601f60058360ff16901b1783614ac290919063ffffffff16565b5050565b60178111614903576148fe8160058460ff16901b60ff161784614ac290919063ffffffff16565b614a12565b60ff811161494457614928601860058460ff16901b1784614ac290919063ffffffff16565b61493e81600185614b029092919063ffffffff16565b50614a11565b61ffff81116149865761496a601960058460ff16901b1784614ac290919063ffffffff16565b61498081600285614b029092919063ffffffff16565b50614a10565b63ffffffff81116149ca576149ae601a60058460ff16901b1784614ac290919063ffffffff16565b6149c481600485614b029092919063ffffffff16565b50614a0f565b67ffffffffffffffff8111614a0e576149f6601b60058460ff16901b1784614ac290919063ffffffff16565b614a0c81600885614b029092919063ffffffff16565b505b5b5b5b5b505050565b614a1f614c66565b82602001518360000151518351011115614a4f57614a4e836002614a4886602001518651614b69565b02614b85565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110614a965781518352602083019250602082019150602081039050614a73565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115614ae857614ae7826002846020015102614b85565b5b815180516020818301018381536001820183525050505050565b614b0a614c66565b836020015184600001515183011115614b3857614b37846002614b31876020015186614b69565b02614b85565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115614b7b57829050614b7f565b8190505b92915050565b606082600001519050614b98838361482b565b614ba28382614a17565b50505050565b6040518060e0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681525090565b60405180608001604052806004905b6060815260200190600190039081614c4e5790505090565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614cc157805160ff1916838001178555614cef565b82800160010185558215614cef579182015b82811115614cee578251825591602001919060010190614cd3565b5b509050614cfc9190614d00565b5090565b614d2291905b80821115614d1e576000816000905550600101614d06565b5090565b9056fea265627a7a723158204d8b81cd56dd14baddedb34d43a468fe126228e547d522469b750c16c2d6dbe664736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063c902c3ae11610059578063c902c3ae146105b0578063cafc419f14610655578063df11460e146106fb578063f58fef8e14610705576100e8565b80638da5cb5b146104c95780639745cd1f14610520578063bfab3db91461058f578063c8f781c2146105a6576100e8565b806327dc297e116100c657806327dc297e1461019f57806338bbfa50146102715780634cf5350a146103da57806370908f211461041f576100e8565b80630eee99cf146100ed5780631a1cc0a5146101045780631b76946614610133575b600080fd5b3480156100f957600080fd5b5061010261071c565b005b34801561011057600080fd5b506101196108fb565b604051808215151515815260200191505060405180910390f35b61019d600480360360a081101561014957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061090e565b005b3480156101ab57600080fd5b5061026f600480360360408110156101c257600080fd5b8101908080359060200190929190803590602001906401000000008111156101e957600080fd5b8201836020820111156101fb57600080fd5b8035906020019184600183028401116401000000008311171561021d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b2d565b005b34801561027d57600080fd5b506103d86004803603606081101561029457600080fd5b8101908080359060200190929190803590602001906401000000008111156102bb57600080fd5b8201836020820111156102cd57600080fd5b803590602001918460018302840111640100000000831117156102ef57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561035257600080fd5b82018360208201111561036457600080fd5b8035906020019184600183028401116401000000008311171561038657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f3b565b005b3480156103e657600080fd5b5061041d600480360360408110156103fd57600080fd5b810190808035906020019092919080359060200190929190505050610f5e565b005b34801561042b57600080fd5b5061046e6004803603602081101561044257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111f6565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018215151515815260200194505050505060405180910390f35b3480156104d557600080fd5b506104de611253565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052c57600080fd5b5061058d6004803603608081101561054357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050611278565b005b34801561059b57600080fd5b506105a4612244565b005b6105ae612365565b005b3480156105bc57600080fd5b506105e9600480360360208110156105d357600080fd5b81019080803590602001909291905050506124a7565b604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b34801561066157600080fd5b506106a46004803603602081101561067857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612509565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b610703612559565b005b34801561071157600080fd5b5061071a61288f565b005b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108a9573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fdc13ef7ce79641e7f89a0adb1f73831b0832805639eefe811c8173e09751306d826040518082815260200191505060405180910390a250565b600860009054906101000a900460ff1681565b6000801515600860009054906101000a900460ff161515141561093357819050610953565b600090506000600860006101000a81548160ff0219169083151502179055505b6000809050600061096982600162030d40612901565b9050610973614ba8565b8181600001818152505088816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050878160400181815250508681606001818152505085816080018181525050838160a00181815250508060c001515080600b60008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015590505080600001518973ffffffffffffffffffffffffffffffffffffffff167f680397c45077ee300a8ffc23b8df8f67de5ada41abab7430a35945e03c283cb3836060015160096000866020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a3505050505050505050565b610b35612e9c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b6c57600080fd5b6000600b600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506000826040516020018082805190602001908083835b60208310610c275780518252602082019150602081019050602083039250610c04565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c90506001600b6000868152602001908152602001600020600201541415610d555760028181610c9057fe5b06600b600086815260200190815260200160002060060181905550610ce38285600b600088815260200190815260200160002060060154600b600089815260200190815260200160002060020154611278565b838273ffffffffffffffffffffffffffffffffffffffff167f3e0b428f99f88317a267eb30f49f168a7d82cb56220b5e3c4ebfba8c71c4dfca83600b600089815260200190815260200160002060060154604051808381526020018281526020019250505060405180910390a3610f35565b6002600b6000868152602001908152602001600020600201541415610e4657600160068281610d8057fe5b0601600b600086815260200190815260200160002060060181905550610dd48285600b600088815260200190815260200160002060060154600b600089815260200190815260200160002060020154611278565b838273ffffffffffffffffffffffffffffffffffffffff167f4abcbda462a94726d98871d89dc3d68df4c87af956c88bff9e26eb6fd8f8d24983600b600089815260200190815260200160002060060154604051808381526020018281526020019250505060405180910390a3610f34565b6003600b6000868152602001908152602001600020600201541415610f33576001600d8281610e7157fe5b0601600b600086815260200190815260200160002060060181905550610ec58285600b600088815260200190815260200160002060060154600b600089815260200190815260200160002060020154611278565b838273ffffffffffffffffffffffffffffffffffffffff167f10426ca2b14c787eb34a20cb459b266c77e6c79ac3eedb0972e4bbf26510ffc783600b600089815260200190815260200160002060060154604051808381526020018281526020019250505060405180910390a35b5b5b50505050565b6000801b600460008060001b815260200190815260200160002081905550505050565b60018110158015610f70575060068111155b610fe2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d7573742063686f6f7365206265747765656e203120616e642036000000000081525060200191505060405180910390fd5b600066038d7ea4c68000830290506000610ffa6131bc565b9050808201600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101540310156110fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e6f7420656e6f756768206c697175696469747900000000000000000000000081525060200191505060405180910390fd5b80600683020160075460065403101561117b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f436f6e74726163742063616e6e6f7420636f766572206265740000000000000081525060200191505060405180910390fd5b806006830201600760008282540192505081905550808201600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825401925050819055506111f033600284868561090e565b50505050565b600a6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600b60008581526020019081526020016000206003015490506000600b60008681526020019081526020016000206005015490508160066000828254019250508190555081600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825403925050819055506001831415611830576000600283029050600b6000878152602001908152602001600020600401548514156115b75780600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254019250508190555081810160066000828254039250508190555060018514156114af57858773ffffffffffffffffffffffffffffffffffffffff167f0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c858460405180806020018060200180602001868152602001858152602001848103845260058152602001807f4865616473000000000000000000000000000000000000000000000000000000815250602001848103835260058152602001807f4865616473000000000000000000000000000000000000000000000000000000815250602001848103825260068152602001807f506c6179657200000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a36115b2565b858773ffffffffffffffffffffffffffffffffffffffff167f0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c858460405180806020018060200180602001868152602001858152602001848103845260058152602001807f5461696c73000000000000000000000000000000000000000000000000000000815250602001848103835260058152602001807f5461696c73000000000000000000000000000000000000000000000000000000815250602001848103825260068152602001807f506c6179657200000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a35b61181b565b81600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550600185141561171757858773ffffffffffffffffffffffffffffffffffffffff167f0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c858660405180806020018060200180602001868152602001858152602001848103845260058152602001807f4865616473000000000000000000000000000000000000000000000000000000815250602001848103835260058152602001807f5461696c73000000000000000000000000000000000000000000000000000000815250602001848103825260058152602001807f486f7573650000000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a361181a565b858773ffffffffffffffffffffffffffffffffffffffff167f0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c858660405180806020018060200180602001868152602001858152602001848103845260058152602001807f5461696c73000000000000000000000000000000000000000000000000000000815250602001848103835260058152602001807f4865616473000000000000000000000000000000000000000000000000000000815250602001848103825260058152602001807f486f7573650000000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a35b5b60028302600760008282540392505081905550505b6002831415611a98576000600683029050600b60008781526020019081526020016000206004015485141561197c5780600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540192505081905550818101600660008282540392505081905550858773ffffffffffffffffffffffffffffffffffffffff167ff0f1a71001487cdd2b5333e3fe895c9deb3fd1ed644fc1563fd75591b714062a87600b60008b81526020019081526020016000206004015487866040518085815260200184815260200180602001848152602001838152602001828103825260068152602001807f506c6179657200000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a3611a83565b81600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550858773ffffffffffffffffffffffffffffffffffffffff167ff0f1a71001487cdd2b5333e3fe895c9deb3fd1ed644fc1563fd75591b714062a87600b60008b81526020019081526020016000206004015487886040518085815260200184815260200180602001848152602001838152602001828103825260058152602001807f486f7573650000000000000000000000000000000000000000000000000000008152506020019550505050505060405180910390a35b60068302600760008282540392505081905550505b60038314156121ec5760011515600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16151514611b6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4d7573742062652077616974696e67000000000000000000000000000000000081525060200191505060405180910390fd5b6000801b600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015411611c24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d757374206861766520686f757365636172642069640000000000000000000081525060200191505060405180910390fd5b6000801b600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506000600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060006001600b6000898152602001908152602001600020600401541415611d7e57600190505b6000600b6000898152602001908152602001600020600401541415611da257600090505b60006002831415611dd157600115158215151415611dc557600b85029050611dcc565b6082850290505b611f80565b6003831415611dfe57600115158215151415611df257600d85029050611df9565b6041850290505b611f7f565b6004831415611e2b57600115158215151415611e1f57600e85029050611e26565b602a850290505b611f7e565b6005831415611e5857600115158215151415611e4c57601085029050611e53565b6020850290505b611f7d565b6006831415611e8557600115158215151415611e7957601285029050611e80565b601a850290505b611f7c565b6007831415611e9957601585029050611f7b565b6008831415611ec657600115158215151415611eba57601a85029050611ec1565b6012850290505b611f7a565b6009831415611ef357600115158215151415611ee757602085029050611eee565b6010850290505b611f79565b600a831415611f2057600115158215151415611f1457602a85029050611f1b565b600e850290505b611f78565b600b831415611f4d57600115158215151415611f4157604185029050611f48565b600d850290505b611f77565b600c831415611f7657600115158215151415611f6e57608285029050611f75565b600b850290505b5b5b5b5b5b5b5b5b5b5b5b6000879050600a8281611f8f57fe5b04915060011515831515148015611fa557508381115b80611fbf575060001515831515148015611fbe57508381105b5b156120d75781600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540192505081905550848201600660008282540392505081905550888a73ffffffffffffffffffffffffffffffffffffffff167f3f49e8a1c02bb092374df7b4bf984f5f1e89085d4745000dd2d8507511083b068684878b88604051808681526020018581526020018415151515815260200183815260200182815260200180602001828103825260068152602001807f506c617965720000000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a36121d4565b84600960008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550888a73ffffffffffffffffffffffffffffffffffffffff167f3f49e8a1c02bb092374df7b4bf984f5f1e89085d4745000dd2d8507511083b068684878b8c604051808681526020018581526020018415151515815260200183815260200182815260200180602001828103825260058152602001807f486f757365000000000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a35b600d8602600760008282540392505081905550505050505b81600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282540392505081905550505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461229d57600080fd5b6000600654905060006006819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156122f2573d6000803e3d6000fd5b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f9ca86e26e8d02952f920895df7583aa717e8ebc63cd0708c0879da89b9a07445826040518082815260200191505060405180910390a250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146123be57600080fd5b66470de4df8200008034101561243c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f32302066696e6e6579206d696e696d756d00000000000000000000000000000081525060200191505060405180910390fd5b346006600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f350a7000a835544193f030ad53ca1f667390855a6373fd43a2a998c98bfbf85634600654604051808381526020018281526020019250505060405180910390a250565b600b6020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060154905087565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b66038d7ea4c68000803410156125d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f312066696e6e6579206d696e696d756d0000000000000000000000000000000081525060200191505060405180910390fd5b6125df614bfe565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154816020018181525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154816040018181525050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015481606001818152505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015590505034600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f155efc6f27878074d7b21fde35c660b361cb83869a21c2409ed1a562f17e172934600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808381526020018281526020019250505060405180910390a25050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146128e857600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b60008083118015612913575060208311155b61291c57600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156129585781602001600182028038833980820191505090505b5090508360f81b8160008151811061296c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f1916602001820160405280156129d15781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015612a0a5781602001600182028038833980820191505090505b5090506000612a17613205565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015612a6b5781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015612aaa5781602001600182028038833980820191505090505b509050612abd8260186008846000613525565b50612ac6614c3f565b60405180608001604052808781526020018881526020018681526020018481525090506000612b2b6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c613584565b9050606060086040519080825280601f01601f191660200182016040528015612b635781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350612e89828285600160048110612ca257fe5b6020020151600287600060048110612cb657fe5b60200201516040518082805190602001908083835b60208310612cee5780518252602082019150602081019050602083039250612ccb565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612d30573d6000803e3d6000fd5b5050506040513d6020811015612d4557600080fd5b810190808051906020019092919050505087600260048110612d6357fe5b60200201516040516020018085805190602001908083835b60208310612d9e5780518252602082019150602081019050602083039250612d7b565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310612def5780518252602082019150602081019050602083039250612dcc565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310612e465780518252602082019150602081019050602083039250612e23565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052805190602001206138f3565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612f2457506000612f22600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b15612f3557612f33600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612f9f57600080fd5b505af1158015612fb3573d6000803e3d6000fd5b505050506040513d6020811015612fc957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461311457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561309857600080fd5b505af11580156130ac573d6000803e3d6000fd5b505050506040513d60208110156130c257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561317c57600080fd5b505afa158015613190573d6000803e3d6000fd5b505050506040513d60208110156131a657600080fd5b8101908080519060200190929190505050905090565b60006132006040518060400160405280600581526020017f707269636500000000000000000000000000000000000000000000000000000081525062030d4061392b565b905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061328d5750600061328b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b1561329e5761329c600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561330857600080fd5b505af115801561331c573d6000803e3d6000fd5b505050506040513d602081101561333257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461347d57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561340157600080fd5b505af1158015613415573d6000803e3d6000fd5b505050506040513d602081101561342b57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156134e557600080fd5b505afa1580156134f9573d6000803e3d6000fd5b505050506040513d602081101561350f57600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561353c57600080fd5b600086602001905060008460200190505b868860200101821015613575578189015180828801525060208201915060208101905061354d565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061360c5750600061360a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b1561361d5761361b600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561368757600080fd5b505af115801561369b573d6000803e3d6000fd5b505050506040513d60208110156136b157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146137fc57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561378057600080fd5b505af1158015613794573d6000803e3d6000fd5b505050506040513d60208110156137aa57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561383357816020015b606081526020019060019003908161381e5790505b5090508360006004811061384357fe5b60200201518160008151811061385557fe5b60200260200101819052508360016004811061386d57fe5b60200201518160018151811061387f57fe5b60200260200101819052508360026004811061389757fe5b6020020151816002815181106138a957fe5b6020026020010181905250836003600481106138c157fe5b6020020151816003815181106138d357fe5b60200260200101819052506138e9858285613cc8565b9150509392505050565b8060046000848152602001908152602001600020819055505050565b6000813b9050919050565b600061392461422e565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806139b3575060006139b1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b156139c4576139c2600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613a2e57600080fd5b505af1158015613a42573d6000803e3d6000fd5b505050506040513d6020811015613a5857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ba357600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b2757600080fd5b505af1158015613b3b573d6000803e3d6000fd5b505050506040513d6020811015613b5157600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015613c38578082015181840152602081019050613c1d565b50505050905090810190601f168015613c655780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015613c8557600080fd5b505af1158015613c99573d6000803e3d6000fd5b505050506040513d6020811015613caf57600080fd5b8101908080519060200190929190505050905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480613d5057506000613d4e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661390f565b145b15613d6157613d5f600061391a565b505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613dcb57600080fd5b505af1158015613ddf573d6000803e3d6000fd5b505050506040513d6020811015613df557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613f4057600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613ec457600080fd5b505af1158015613ed8573d6000803e3d6000fd5b505050506040513d6020811015613eee57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015613fd7578082015181840152602081019050613fbc565b50505050905090810190601f1680156140045780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561402457600080fd5b505af1158015614038573d6000803e3d6000fd5b505050506040513d602081101561404e57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115614081576000801b915050614227565b606061408c85614785565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015614131578082015181840152602081019050614116565b50505050905090810190601f16801561415e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561419757808201518184015260208101905061417c565b50505050905090810190601f1680156141c45780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156141e657600080fd5b505af11580156141fa573d6000803e3d6000fd5b50505050506040513d602081101561421157600080fd5b8101908080519060200190929190505050925050505b9392505050565b60008061424e731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61390f565b11156142f057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506142e76040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250614805565b60019050614782565b600061430f73c03a2615d5efaf5f49f60b7bb6583eaec212fdf161390f565b11156143b15773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506143a86040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250614805565b60019050614782565b60006143d073b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61390f565b11156144725773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506144696040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250614805565b60019050614782565b600061449173146500cfd35b22e4a392fe0adc06de1a1368ed4861390f565b11156145335773146500cfd35b22e4a392fe0adc06de1a1368ed48600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061452a6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250614805565b60019050614782565b600061455273a2998efd205fb9d4b4963afb70778d6354ad3a4161390f565b11156145f45773a2998efd205fb9d4b4963afb70778d6354ad3a41600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506145eb6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250614805565b60019050614782565b6000614613736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561390f565b111561467757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050614782565b60006146967320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61390f565b11156146fa577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050614782565b60006147197351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61390f565b111561477d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050614782565b600090505b90565b606061478f61481f565b614797614c66565b6147a38161040061482b565b6147ac81614875565b60008090505b83518110156147ee576147e18482815181106147ca57fe5b60200260200101518361488390919063ffffffff16565b80806001019150506147b2565b506147f8816148a8565b8060000151915050919050565b806003908051906020019061481b929190614c80565b5050565b60405180590338823950565b600081905060006020828161483c57fe5b0614614855576020818161484c57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b6148808160046148b6565b50565b61489082600283516148d7565b6148a38183614a1790919063ffffffff16565b505050565b6148b38160076148b6565b50565b6148d3601f60058360ff16901b1783614ac290919063ffffffff16565b5050565b60178111614903576148fe8160058460ff16901b60ff161784614ac290919063ffffffff16565b614a12565b60ff811161494457614928601860058460ff16901b1784614ac290919063ffffffff16565b61493e81600185614b029092919063ffffffff16565b50614a11565b61ffff81116149865761496a601960058460ff16901b1784614ac290919063ffffffff16565b61498081600285614b029092919063ffffffff16565b50614a10565b63ffffffff81116149ca576149ae601a60058460ff16901b1784614ac290919063ffffffff16565b6149c481600485614b029092919063ffffffff16565b50614a0f565b67ffffffffffffffff8111614a0e576149f6601b60058460ff16901b1784614ac290919063ffffffff16565b614a0c81600885614b029092919063ffffffff16565b505b5b5b5b5b505050565b614a1f614c66565b82602001518360000151518351011115614a4f57614a4e836002614a4886602001518651614b69565b02614b85565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110614a965781518352602083019250602082019150602081039050614a73565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115614ae857614ae7826002846020015102614b85565b5b815180516020818301018381536001820183525050505050565b614b0a614c66565b836020015184600001515183011115614b3857614b37846002614b31876020015186614b69565b02614b85565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115614b7b57829050614b7f565b8190505b92915050565b606082600001519050614b98838361482b565b614ba28382614a17565b50505050565b6040518060e0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681525090565b60405180608001604052806004905b6060815260200190600190039081614c4e5790505090565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614cc157805160ff1916838001178555614cef565b82800160010185558215614cef579182015b82811115614cee578251825591602001919060010190614cd3565b5b509050614cfc9190614d00565b5090565b614d2291905b80821115614d1e576000816000905550600101614d06565b5090565b9056fea265627a7a723158204d8b81cd56dd14baddedb34d43a468fe126228e547d522469b750c16c2d6dbe664736f6c634300050c0032",
  "sourceMap": "195:1591:8:-;;;428:4:0;401:31;;;;;;;;;;;;;;;;;;;;208:10:6;200:5;;:18;;;;;;;;;;;;;;;;;;195:1591:8;;;;;;",
  "deployedSourceMap": "195:1591:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:319:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3551:319:0;;;:::i;:::-;;401:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;401:31:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3132:1020:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3132:1020:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;944:2178;;8:9:-1;5:2;;;30:1;27;20:12;5:2;944:2178:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;944:2178:7;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;944:2178:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;944:2178:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;944:2178:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;944:2178:7;;;;;;;;;;;;;;;:::i;:::-;;14232:181:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14232:181:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14232:181:10;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14232:181:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14232:181:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14232:181:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14232:181:10;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14232:181:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14232:181:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14232:181:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14232:181:10;;;;;;;;;;;;;;;:::i;:::-;;295:1486:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:1486:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;295:1486:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2311:37:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2311:37:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2311:37:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52:20:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:20:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;838:7267:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:7267:9;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;838:7267:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3880:235:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3880:235:0;;;:::i;:::-;;2796:205;;;:::i;:::-;;2384:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2384:35:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2384:35:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2263:41:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2263:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:530;;;:::i;:::-;;97:79:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;97:79:2;;;:::i;:::-;;3551:319:0;3639:1;3609:7;:19;3617:10;3609:19;;;;;;;;;;;;;;;:27;;;:31;3601:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3673:15;3691:7;:19;3699:10;3691:19;;;;;;;;;;;;;;;:27;;;3673:45;;3759:1;3729:7;:19;3737:10;3729:19;;;;;;;;;;;;;;;:27;;:31;;;;3771:10;:19;;:31;3791:10;3771:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3771:31:0;3839:10;3818:44;;;3851:10;3818:44;;;;;;;;;;;;;;;;;;3551:319;:::o;401:31::-;;;;;;;;;;;;;:::o;3132:1020:7:-;3270:18;3319:5;3303:21;;:12;;;;;;;;;;;:21;;;3299:160;;;3354:11;3341:24;;3299:160;;;3411:1;3398:14;;3442:5;3427:12;;:20;;;;;;;;;;;;;;;;;;3299:160;3473:29;3505:1;3473:33;;3517:16;3536:144;3576:21;304:1;348:6;3536:25;:144::i;:::-;3517:163;;3695:17;;:::i;:::-;3799:8;3787:6;:9;;:20;;;;;3834:6;3818;:13;;:22;;;;;;;;;;;3868:7;3851:6;:14;;:24;;;;;3905:9;3886:6;:16;;:28;;;;;3941:6;3925;:13;;:22;;;;;3978:10;3958:6;:17;;:30;;;;;3999:6;:13;;;;4042:6;4025:4;:14;4030:8;4025:14;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4084:6;:9;;;4076:6;4066:78;;;4095:6;:16;;;4113:7;:22;4121:6;:13;;;4113:22;;;;;;;;;;;;;;;:30;;;4066:78;;;;;;;;;;;;;;;;;;;;;;;;3132:1020;;;;;;;;;:::o;944:2178::-;1070:20;:18;:20::i;:::-;1056:34;;:10;:34;;;1048:43;;;;;;1104:14;1121:4;:14;1126:8;1121:14;;;;;;;;;;;:21;;;;;;;;;;;;1104:38;;1185:8;1153:7;:15;1161:6;1153:15;;;;;;;;;;;;;;;:29;;:40;;;;1568:20;1626:7;1609:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1609:25:7;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1609:25:7;;;1599:36;;;;;;1591:45;;1568:68;;1683:1;1657:4;:14;1662:8;1657:14;;;;;;;;;;;:22;;;:27;1653:1449;;;1796:1;1781:12;:16;;;;;;1757:4;:14;1762:8;1757:14;;;;;;;;;;;:21;;:40;;;;1879:71;1886:6;1894:8;1904:4;:14;1909:8;1904:14;;;;;;;;;;;:21;;;1927:4;:14;1932:8;1927:14;;;;;;;;;;;:22;;;1879:6;:71::i;:::-;2049:8;2041:6;2022:73;;;2059:12;2073:4;:14;2078:8;2073:14;;;;;;;;;;;:21;;;2022:73;;;;;;;;;;;;;;;;;;;;;;;;1653:1449;;;2149:1;2123:4;:14;2128:8;2123:14;;;;;;;;;;;:22;;;:27;2119:983;;;2268:1;2263;2248:12;:16;;;;;;2247:22;2223:4;:14;2228:8;2223:14;;;;;;;;;;;:21;;:46;;;;2347:71;2354:6;2362:8;2372:4;:14;2377:8;2372:14;;;;;;;;;;;:21;;;2395:4;:14;2400:8;2395:14;;;;;;;;;;;:22;;;2347:6;:71::i;:::-;2517:8;2509:6;2490:73;;;2527:12;2541:4;:14;2546:8;2541:14;;;;;;;;;;;:21;;;2490:73;;;;;;;;;;;;;;;;;;;;;;;;2119:983;;;2617:1;2591:4;:14;2596:8;2591:14;;;;;;;;;;;:22;;;:27;2587:515;;;2754:1;2748:2;2733:12;:17;;;;;;2732:23;2708:4;:14;2713:8;2708:14;;;;;;;;;;;:21;;:47;;;;2871:71;2878:6;2886:8;2896:4;:14;2901:8;2896:14;;;;;;;;;;;:21;;;2919:4;:14;2924:8;2919:14;;;;;;;;;;;:22;;;2871:6;:71::i;:::-;3040:8;3032:6;3014:72;;;3050:12;3064:4;:14;3069:8;3064:14;;;;;;;;;;;:21;;;3014:72;;;;;;;;;;;;;;;;;;;;;;;;2587:515;2119:983;1653:1449;944:2178;;;;:::o;14232:181:10:-;14403:1;14395:10;;14358:22;:34;14389:1;14381:10;;14358:34;;;;;;;;;;;:47;;;;14232:181;;;:::o;295:1486:8:-;392:1;379:9;:14;;:32;;;;;410:1;397:9;:14;;379:32;371:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:17;490:4;476:11;:18;456:38;;561:18;582:15;:13;:15::i;:::-;561:36;;695:10;683:9;:22;648:7;:19;656:10;648:19;;;;;;;;;;;;;;;:31;;;618:7;:19;626:10;618:19;;;;;;;;;;;;;;;:27;;;:61;:87;;610:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;803:10;798:1;786:9;:13;785:28;767:14;;749:15;;:32;:64;;741:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1310:10;1305:1;1293:9;:13;1292:28;1273:14;;:48;;;;;;;;;;;1529:10;1517:9;:22;1481:7;:19;1489:10;1481:19;;;;;;;;;;;;;;;:31;;;:59;;;;;;;;;;;1652:62;1666:10;1678:1;1681:9;1692;1703:10;1652:13;:62::i;:::-;295:1486;;;;:::o;2311:37:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;52:20:6:-;;;;;;;;;;;;;:::o;838:7267:9:-;1030:17;1050:4;:14;1055:8;1050:14;;;;;;;;;;;:24;;;1030:44;;1085:18;1106:4;:14;1111:8;1106:14;;;;;;;;;;;:25;;;1085:46;;1161:9;1142:15;;:28;;;;;;;;;;;1208:9;1181:7;:15;1189:6;1181:15;;;;;;;;;;;;;;;:23;;;:36;;;;;;;;;;;1242:1;1234:4;:9;1230:1298;;;1302:18;1335:1;1323:9;:13;1302:34;;1365:4;:14;1370:8;1365:14;;;;;;;;;;;:21;;;1355:6;:31;1351:1052;;;1514:10;1487:7;:15;1495:6;1487:15;;;;;;;;;;;;;;;:23;;;:37;;;;;;;;;;;1576:10;1563;:23;1543:15;;:44;;;;;;;;;;;1658:1;1648:6;:11;1644:307;;;1734:8;1726:6;1711:83;;;1772:9;1783:10;1711:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:307;;;1871:8;1863:6;1848:83;;;1909:9;1920:10;1848:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:307;1351:1052;;;2018:10;1991:7;:15;1999:6;1991:15;;;;;;;;;;;;;;;:23;;;:37;;;;;;;;;;;2099:1;2089:6;:11;2085:303;;;2175:8;2167:6;2152:81;;;2212:9;2223;2152:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2085:303;;;2310:8;2302:6;2287:81;;;2347:9;2358;2287:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2085:303;1351:1052;2448:1;2436:9;:13;2417:14;;:33;;;;;;;;;;;1230:1298;;2552:1;2544:4;:9;2540:860;;;2613:18;2646:1;2634:9;:13;2613:34;;2725:4;:14;2730:8;2725:14;;;;;;;;;;;:21;;;2715:6;:31;2711:564;;;2794:10;2767:7;:15;2775:6;2767:15;;;;;;;;;;;;;;;:23;;;:37;;;;;;;;;;;2856:10;2843;:23;2823:15;;:44;;;;;;;;;;;2952:8;2944:6;2929:96;;;2962:6;2970:4;:14;2975:8;2970:14;;;;;;;;;;;:21;;;3003:9;3014:10;2929:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2711:564;;;3093:10;3066:7;:15;3074:6;3066:15;;;;;;;;;;;;;;;:23;;;:37;;;;;;;;;;;3188:8;3180:6;3165:94;;;3198:6;3206:4;:14;3211:8;3206:14;;;;;;;;;;;:21;;;3238:9;3249;3165:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2711:564;3320:1;3308:9;:13;3289:14;;:33;;;;;;;;;;;2540:860;;3424:1;3416:4;:9;3412:4635;;;3523:4;3498:29;;:5;:13;3504:6;3498:13;;;;;;;;;;;;;;;:21;;;;;;;;;;;;:29;;;3490:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3650:1;3627:24;;:5;:13;3633:6;3627:13;;;;;;;;;;;;;;;:20;;;:24;3619:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3778:1;3755:24;;:5;:13;3761:6;3755:13;;;;;;;;;;;;;;;:20;;:24;;;;3911:5;3887;:13;3893:6;3887:13;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;3977:17;3997:5;:13;4003:6;3997:13;;;;;;;;;;;;;;;:23;;;3977:43;;4061:1;4035:5;:13;4041:6;4035:13;;;;;;;;;;;;;;;:23;;:27;;;;4119:9;4172:1;4147:4;:14;4152:8;4147:14;;;;;;;;;;;:21;;;:26;4143:43;;;4182:4;4175:11;;4143:43;4317:1;4292:4;:14;4297:8;4292:14;;;;;;;;;;;:21;;;:26;4288:44;;;4327:5;4320:12;;4288:44;4637:18;4687:1;4674:9;:14;4670:2327;;;4721:4;4713:12;;:4;:12;;;4709:165;;;4775:2;4763:9;:14;4750:27;;4709:165;;;4851:3;4839:9;:15;4826:28;;4709:165;4670:2327;;;4912:1;4899:9;:14;4895:2102;;;4946:4;4938:12;;:4;:12;;;4934:164;;;5000:2;4988:9;:14;4975:27;;4934:164;;;5076:2;5064:9;:14;5051:27;;4934:164;4895:2102;;;5136:1;5123:9;:14;5119:1878;;;5170:4;5162:12;;:4;:12;;;5158:164;;;5224:2;5212:9;:14;5199:27;;5158:164;;;5300:2;5288:9;:14;5275:27;;5158:164;5119:1878;;;5360:1;5347:9;:14;5343:1654;;;5394:4;5386:12;;:4;:12;;;5382:164;;;5448:2;5436:9;:14;5423:27;;5382:164;;;5524:2;5512:9;:14;5499:27;;5382:164;5343:1654;;;5584:1;5571:9;:14;5567:1430;;;5618:4;5610:12;;:4;:12;;;5606:164;;;5672:2;5660:9;:14;5647:27;;5606:164;;;5748:2;5736:9;:14;5723:27;;5606:164;5567:1430;;;5808:1;5795:9;:14;5791:1206;;;5855:2;5843:9;:14;5830:27;;5791:1206;;;5896:1;5883:9;:14;5879:1118;;;5930:4;5922:12;;:4;:12;;;5918:164;;;5984:2;5972:9;:14;5959:27;;5918:164;;;6060:2;6048:9;:14;6035:27;;5918:164;5879:1118;;;6120:1;6107:9;:14;6103:894;;;6154:4;6146:12;;:4;:12;;;6142:164;;;6208:2;6196:9;:14;6183:27;;6142:164;;;6284:2;6272:9;:14;6259:27;;6142:164;6103:894;;;6344:2;6331:9;:15;6327:670;;;6379:4;6371:12;;:4;:12;;;6367:164;;;6433:2;6421:9;:14;6408:27;;6367:164;;;6509:2;6497:9;:14;6484:27;;6367:164;6327:670;;;6569:2;6556:9;:15;6552:445;;;6604:4;6596:12;;:4;:12;;;6592:164;;;6658:2;6646:9;:14;6633:27;;6592:164;;;6734:2;6722:9;:14;6709:27;;6592:164;6552:445;;;6794:2;6781:9;:15;6777:220;;;6829:4;6821:12;;:4;:12;;;6817:165;;;6883:3;6871:9;:15;6858:28;;6817:165;;;6960:2;6948:9;:14;6935:27;;6817:165;6777:220;6552:445;6327:670;6103:894;5879:1118;5791:1206;5567:1430;5343:1654;5119:1878;4895:2102;4670:2327;7013:16;7032:6;7013:25;;7167:2;7154:10;:15;;;;;;7141:28;;7328:4;7320:12;;:4;:12;;;:36;;;;;7347:9;7336:8;:20;7320:36;7319:81;;;;7370:5;7362:13;;:4;:13;;;:37;;;;;7390:9;7379:8;:20;7362:37;7319:81;7315:606;;;7448:10;7421:7;:15;7429:6;7421:15;;;;;;;;;;;;;;;:23;;;:37;;;;;;;;;;;7510:10;7497;:23;7477:15;;:44;;;;;;;;;;;7606:8;7598:6;7583:92;;;7616:9;7627:8;7637:4;7643:9;7654:10;7583:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7315:606;;;7743:10;7716:7;:15;7724:6;7716:15;;;;;;;;;;;;;;;:23;;;:37;;;;;;;;;;;7838:8;7830:6;7815:90;;;7848:9;7859:8;7869:4;7875:9;7886;7815:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7315:606;7966:2;7954:9;:14;7935;;:34;;;;;;;;;;;3412:4635;;;;;8088:9;8057:7;:15;8065:6;8057:15;;;;;;;;;;;;;;;:27;;;:40;;;;;;;;;;;838:7267;;;;;;:::o;3880:235:0:-;134:5:6;;;;;;;;;;;120:19;;:10;:19;;;112:28;;;;;;3943:15:0;3961;;3943:33;;4005:1;3987:15;:19;;;;4017:10;:19;;:31;4037:10;4017:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4017:31:0;4089:5;;;;;;;;;;;4064:43;;;4096:10;4064:43;;;;;;;;;;;;;;;;;;151:1:6;3880:235:0:o;2796:205::-;134:5:6;;;;;;;;;;;120:19;;:10;:19;;;112:28;;;;;;2866:9:0;1407:13;1394:9;:26;;1385:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2907:9;2888:15;;:28;;;;;;;;;;;2954:10;2934:59;;;2966:9;2977:15;;2934:59;;;;;;;;;;;;;;;;;;;;;;;;151:1:6;2796:205:0:o;2384:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2263:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3011:530::-;3064:8;1268:13;1255:9;:26;;1246:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3087:23;;:::i;:::-;3147:10;3121:9;:23;;:36;;;;;;;;;;;3188:7;:19;3196:10;3188:19;;;;;;;;;;;;;;;:27;;;3168:9;:17;;:47;;;;;3250:7;:19;3258:10;3250:19;;;;;;;;;;;;;;;:31;;;3226:9;:21;;:55;;;;;3318:7;:19;3326:10;3318:19;;;;;;;;;;;;;;;:33;;;3292:9;:23;;:59;;;;;3386:9;3364:7;:19;3372:10;3364:19;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3439:9;3408:7;:19;3416:10;3408:19;;;;;;;;;;;;;;;:27;;;:40;;;;;;;;;;;3482:10;3466:67;;;3494:9;3505:7;:19;3513:10;3505:19;;;;;;;;;;;;;;;:27;;;3466:67;;;;;;;;;;;;;;;;;;;;;;;;1313:1;3011:530;:::o;97:79:2:-;134:5:6;;;;;;;;;;;120:19;;:10;:19;;;112:28;;;;;;157:10:2;144:24;;;44511:2683:10;44613:16;44661:1;44651:7;:11;44650:32;;;;;44679:2;44668:7;:13;;44650:32;44642:41;;;;;;44704:2;44694:12;;;;44763:19;44795:1;44785:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;44785:12:10;;;;44763:34;;44831:7;44820:20;;44808:6;44815:1;44808:9;;;;;;;;;;;:32;;;;;;;;;;;44851:19;44883:2;44873:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;44873:13:10;;;;44851:35;;44897:27;44937:2;44927:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;44927:13:10;;;;44897:43;;44951:30;44984:40;:38;:40::i;:::-;44951:73;;45074:4;45066:6;45059:20;45427:9;45417:8;45413:24;45408:1;45400:6;45396:14;45386:25;45382:56;45375:4;45367:6;45363:17;45356:83;45476:4;45460:14;45453:28;45529:22;45522:4;45506:14;45502:25;45495:57;45573:18;45604:2;45594:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45594:13:10;;;;45573:34;;45667:6;45660:4;45653:5;45649:16;45642:32;45695:25;45733:1;45723:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45723:12:10;;;;45695:40;;45746;45756:5;45763:2;45767:1;45770:12;45784:1;45746:9;:40::i;:::-;;45797:20;;:::i;:::-;:62;;;;;;;;45821:6;45797:62;;;;45829:6;45797:62;;;;45837:14;45797:62;;;;45853:5;45797:62;;;;;45870:15;45888:47;;;;;;;;;;;;;;;;;;45913:4;45919:15;45888:14;:47::i;:::-;45870:65;;45946:30;45989:1;45979:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45979:12:10;;;;45946:45;;46059:4;46045:12;46041:23;46035:30;46124:65;46121:1;46117:73;46110:4;46091:17;46087:28;46079:112;46250:63;46247:1;46243:71;46236:4;46217:17;46213:28;46205:110;46374:61;46371:1;46367:69;46360:4;46341:17;46337:28;46329:108;46496:59;46493:1;46489:67;46482:4;46463:17;46459:28;46451:106;46616:57;46613:1;46609:65;46602:4;46583:17;46579:28;46571:104;46734:55;46731:1;46727:63;46720:4;46701:17;46697:28;46689:102;46850:53;46847:1;46843:61;46836:4;46817:17;46813:28;46805:100;46964:51;46961:1;46957:59;46950:4;46931:17;46927:28;46919:98;46011:1017;47038:123;47070:7;47106:17;47125:4;47130:1;47125:7;;;;;;;;;;;47134:15;47141:4;47146:1;47141:7;;;;;;;;;;;47134:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47134:15:10;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47134:15:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47134:15:10;;;;;;;;;;;;;;;;47151:4;47156:1;47151:7;;;;;;;;;;;47089:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47089:70:10;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47089:70:10;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47089:70:10;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47089:70:10;;;47079:81;;;;;;47038:31;:123::i;:::-;47179:7;47172:14;;;;;;;;;;;44511:2683;;;;;:::o;36438:132::-;36498:24;10569:1;10545:26;;10553:3;;;;;;;;;;;10545:26;;;10544:64;;;;10606:1;10577:25;10597:3;;;;;;;;;;;10577:11;:25::i;:::-;:30;10544:64;10540:132;;;10625:35;10191:1;10625:19;:35::i;:::-;;10540:132;10707:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10707:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10707:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10707:16:10;;;;;;;;;;;;;;;;10686:37;;10694:8;;;;;;;;;;;10686:37;;;10682:108;;10761:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10761:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10761:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10761:16:10;;;;;;;;;;;;;;;;10740:8;;:38;;;;;;;;;;;;;;;;;;10682:108;36542:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36542:20:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36542:20:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;36542:20:10;;;;;;;;;;;;;;;;36535:27;;36438:132;:::o;4162:130:7:-;4205:13;4240:44;;;;;;;;;;;;;;;;;;348:6;4240:17;:44::i;:::-;4232:52;;4162:130;:::o;36881:171:10:-;36961:23;10569:1;10545:26;;10553:3;;;;;;;;;;;10545:26;;;10544:64;;;;10606:1;10577:25;10597:3;;;;;;;;;;;10577:11;:25::i;:::-;:30;10544:64;10540:132;;;10625:35;10191:1;10625:19;:35::i;:::-;;10540:132;10707:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10707:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10707:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10707:16:10;;;;;;;;;;;;;;;;10686:37;;10694:8;;;;;;;;;;;10686:37;;;10682:108;;10761:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10761:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10761:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10761:16:10;;;;;;;;;;;;;;;;10740:8;;:38;;;;;;;;;;;;;;;;;;10682:108;37004:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37004:40:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37004:40:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37004:40:10;;;;;;;;;;;;;;;;36997:47;;36881:171;:::o;53965:707::-;54093:25;54131:14;54158:9;54148:7;:19;54131:36;;54200:9;54186:3;:10;:23;;54178:32;;;;;;54266:6;54280:11;54275:2;:16;54266:25;;54383:6;54397:9;54392:2;:14;54383:23;;54417:227;54448:7;54434:11;54429:2;:16;:26;54424:1;:32;54417:227;;;54529:1;54522:5;54518:13;54512:20;54570:3;54566:1;54561:3;54557:11;54550:24;54482:107;54608:2;54603:7;;;;54630:2;54625:7;;;;54417:227;;;54661:3;54654:10;;;;;53965:707;;;;;;;:::o;34218:384::-;34338:11;10569:1;10545:26;;10553:3;;;;;;;;;;;10545:26;;;10544:64;;;;10606:1;10577:25;10597:3;;;;;;;;;;;10577:11;:25::i;:::-;:30;10544:64;10540:132;;;10625:35;10191:1;10625:19;:35::i;:::-;;10540:132;10707:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10707:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10707:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10707:16:10;;;;;;;;;;;;;;;;10686:37;;10694:8;;;;;;;;;;;10686:37;;;10682:108;;10761:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10761:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10761:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10761:16:10;;;;;;;;;;;;;;;;10740:8;;:38;;;;;;;;;;;;;;;;;;10682:108;34362:22;34399:1;34387:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34362:39;;34425:5;34431:1;34425:8;;;;;;;;;;;34412:7;34420:1;34412:10;;;;;;;;;;;;;:21;;;;34457:5;34463:1;34457:8;;;;;;;;;;;34444:7;34452:1;34444:10;;;;;;;;;;;;;:21;;;;34489:5;34495:1;34489:8;;;;;;;;;;;34476:7;34484:1;34476:10;;;;;;;;;;;;;:21;;;;34521:5;34527:1;34521:8;;;;;;;;;;;34508:7;34516:1;34508:10;;;;;;;;;;;;;:21;;;;34547:47;34562:11;34575:7;34584:9;34547:14;:47::i;:::-;34540:54;;;34218:384;;;;;:::o;47202:154::-;47337:11;47302:22;:32;47325:8;47302:32;;;;;;;;;;;:46;;;;47202:154;;:::o;36578:151::-;36637:10;36705:5;36693:18;36684:27;;36669:53;;;:::o;11294:208::-;11359:16;11473:21;:19;:21::i;:::-;11466:28;;11294:208;;;:::o;14587:185::-;14687:16;10569:1;10545:26;;10553:3;;;;;;;;;;;10545:26;;;10544:64;;;;10606:1;10577:25;10597:3;;;;;;;;;;;10577:11;:25::i;:::-;:30;10544:64;10540:132;;;10625:35;10191:1;10625:19;:35::i;:::-;;10540:132;10707:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10707:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10707:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10707:16:10;;;;;;;;;;;;;;;;10686:37;;10694:8;;;;;;;;;;;10686:37;;;10682:108;;10761:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10761:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10761:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10761:16:10;;;;;;;;;;;;;;;;10740:8;;:38;;;;;;;;;;;;;;;;;;10682:108;14723:8;;;;;;;;;;;:17;;;14741:11;14754:9;14723:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14723:41:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14723:41:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14723:41:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14723:41:10;;;;;;;;;;;;;;;;14716:48;;14587:185;;;;:::o;28621:461::-;28740:11;10569:1;10545:26;;10553:3;;;;;;;;;;;10545:26;;;10544:64;;;;10606:1;10577:25;10597:3;;;;;;;;;;;10577:11;:25::i;:::-;:30;10544:64;10540:132;;;10625:35;10191:1;10625:19;:35::i;:::-;;10540:132;10707:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10707:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10707:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10707:16:10;;;;;;;;;;;;;;;;10686:37;;10694:8;;;;;;;;;;;10686:37;;;10682:108;;10761:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10761:16:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10761:16:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10761:16:10;;;;;;;;;;;;;;;;10740:8;;:38;;;;;;;;;;;;;;;;;;10682:108;28764:10;28777:8;;;;;;;;;;;:17;;;28795:11;28808:9;28777:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;28777:41:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28777:41:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28777:41:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28777:41:10;;;;;;;;;;;;;;;;28764:54;;28865:9;28851:11;:23;28841:7;:33;28833:5;:41;28829:109;;;28898:1;28891:8;;;;;;;28829:109;28948:17;28968:14;28976:5;28968:7;:14::i;:::-;28948:34;;29000:8;;;;;;;;;;;:28;;;29035:5;29042:1;29045:11;29058:4;29064:9;29000:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29000:74:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29000:74:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29000:74:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29000:74:10;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;29000:74:10;;;;;;;;;;;;;;;;28993:81;;;;10800:1;28621:461;;;;;:::o;11786:2070::-;11835:16;11926:1;11868:55;11880:42;11868:11;:55::i;:::-;:59;11864:250;;;11980:42;11954:3;;:69;;;;;;;;;;;;;;;;;;12038:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12098:4;12091:11;;;;11864:250;12186:1;12128:55;12140:42;12128:11;:55::i;:::-;:59;12124:259;;;12248:42;12222:3;;:69;;;;;;;;;;;;;;;;;;12306:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;12367:4;12360:11;;;;12124:259;12455:1;12397:55;12409:42;12397:11;:55::i;:::-;:59;12393:254;;;12515:42;12489:3;;:69;;;;;;;;;;;;;;;;;;12573:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12631:4;12624:11;;;;12393:254;12719:1;12661:55;12673:42;12661:11;:55::i;:::-;:59;12657:258;;;12781:42;12755:3;;:69;;;;;;;;;;;;;;;;;;12839:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12899:4;12892:11;;;;12657:258;12987:1;12929:55;12941:42;12929:11;:55::i;:::-;:59;12925:256;;;13048:42;13022:3;;:69;;;;;;;;;;;;;;;;;;13106:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;13165:4;13158:11;;;;12925:256;13253:1;13195:55;13207:42;13195:11;:55::i;:::-;:59;13191:205;;;13315:42;13289:3;;:69;;;;;;;;;;;;;;;;;;13380:4;13373:11;;;;13191:205;13468:1;13410:55;13422:42;13410:11;:55::i;:::-;:59;13406:204;;;13529:42;13503:3;;:69;;;;;;;;;;;;;;;;;;13594:4;13587:11;;;;13406:204;13682:1;13624:55;13636:42;13624:11;:55::i;:::-;:59;13620:206;;;13745:42;13719:3;;:69;;;;;;;;;;;;;;;;;;13810:4;13803:11;;;;13620:206;13843:5;13836:12;;11786:2070;;:::o;44128:375::-;44189:26;44228:19;:17;:19::i;:::-;44258:24;;:::i;:::-;44293:22;44305:3;44310:4;44293:11;:22::i;:::-;44326:16;:3;:14;:16::i;:::-;44358:6;44367:1;44358:10;;44353:90;44374:4;:11;44370:1;:15;44353:90;;;44407:24;44423:4;44428:1;44423:7;;;;;;;;;;;;;;44407:3;:15;;:24;;;;:::i;:::-;44387:3;;;;;;;44353:90;;;;44453:17;:3;:15;:17::i;:::-;44488:3;:7;;;44481:14;;;44128:375;;;:::o;11510:127::-;11616:13;11592:21;:37;;;;;;;;;;;;:::i;:::-;;11510:127;:::o;57619:175::-;57715:4;57709:11;57770:4;57763:5;57759:16;57749:8;57743:4;57734:42;57682:105;:::o;2753:446::-;2828:13;2844:9;2828:25;;2885:1;2879:2;2868:8;:13;;;;;;:18;2864:83;;2932:2;2921:8;:13;;;;;;2915:2;:20;2903:32;;;;2864:83;2973:8;2957:4;:13;;:24;;;;;3071:4;3065:11;3103:3;3097:4;3090:17;3133:1;3128:3;3121:14;3171:8;3166:3;3162:18;3156:4;3149:32;3039:153;;;;:::o;9151:130::-;9223:50;9250:4;7258:1;9223:26;:50::i;:::-;9151:130;:::o;8756:181::-;8850:49;8861:4;7208:1;8885:6;:13;8850:10;:49::i;:::-;8910:19;8922:6;8910:4;:11;;:19;;;;:::i;:::-;;8756:181;;:::o;9423:138::-;9496:57;9523:4;7423:1;9496:26;:57::i;:::-;9423:138;:::o;8179:147::-;8280:38;8314:2;8309:1;8299:6;:11;;;;8298:18;8280:4;:11;;:38;;;;:::i;:::-;8179:147;;:::o;7433:738::-;7545:2;7535:6;:12;7531:633;;7564:42;7598:6;7593:1;7583:6;:11;;;;7582:22;;;7564:4;:11;;:42;;;;:::i;:::-;7531:633;;;7638:4;7628:6;:14;7624:540;;7659:38;7693:2;7688:1;7678:6;:11;;;;7677:18;7659:4;:11;;:38;;;;:::i;:::-;7712:25;7727:6;7735:1;7712:4;:14;;:25;;;;;:::i;:::-;;7624:540;;;7769:6;7759;:16;7755:409;;7792:38;7826:2;7821:1;7811:6;:11;;;;7810:18;7792:4;:11;;:38;;;;:::i;:::-;7845:25;7860:6;7868:1;7845:4;:14;;:25;;;;;:::i;:::-;;7755:409;;;7902:10;7892:6;:20;7888:276;;7929:38;7963:2;7958:1;7948:6;:11;;;;7947:18;7929:4;:11;;:38;;;;:::i;:::-;7982:25;7997:6;8005:1;7982:4;:14;;:25;;;;;:::i;:::-;;7888:276;;;8039:18;8029:6;:28;8025:139;;8074:38;8108:2;8103:1;8093:6;:11;;;;8092:18;8074:4;:11;;:38;;;;:::i;:::-;8127:25;8142:6;8150:1;8127:4;:14;;:25;;;;;:::i;:::-;;8025:139;7888:276;7755:409;7624:540;7531:633;7433:738;;;:::o;3839:1241::-;3918:21;;:::i;:::-;3989:4;:13;;;3971:4;:8;;;:15;3956:5;:12;:30;:46;3952:129;;;4019:50;4026:4;4067:1;4032:32;4036:4;:13;;;4051:5;:12;4032:3;:32::i;:::-;:36;4019:6;:50::i;:::-;3952:129;4091:9;4111:8;4130;4141:5;:12;4130:23;;4208:4;4202:11;4284:6;4278:13;4372:2;4363:6;4355;4351:19;4347:28;4339:36;;4496:5;4490:12;4482:6;4478:25;4470:6;4463:41;4560:2;4553:5;4549:14;4542:21;;4173:401;;4584:212;4597:2;4590:3;:9;4584:212;;4716:3;4710:10;4704:4;4697:24;4758:2;4750:10;;;;4782:2;4775:9;;;;4608:2;4601:9;;;;4584:212;;;4806:9;4838:1;4831:3;4826:2;:8;4818:3;:17;:21;4806:33;;4933:4;4929:9;4923:3;4917:10;4913:26;4986:4;4979;4973:11;4969:22;5031:7;5021:8;5018:21;5012:4;5005:35;4883:168;;5068:4;5061:11;;;;;;3839:1241;;;;:::o;5374:586::-;5474:4;:13;;;5470:1;5452:4;:8;;;:15;:19;:35;5448:99;;;5504:31;5511:4;5533:1;5517:4;:13;;;:17;5504:6;:31::i;:::-;5448:99;5601:4;5595:11;5677:6;5671:13;5769:2;5760:6;5752;5748:19;5744:28;5868:5;5862:4;5854:20;5915:1;5907:6;5903:14;5895:6;5888:30;5566:387;;;;;:::o;6254:748::-;6339:21;;:::i;:::-;6402:4;:13;;;6384:4;:8;;;:15;6377:4;:22;:38;6373:113;;;6432:42;6439:4;6472:1;6445:24;6449:4;:13;;;6464:4;6445:3;:24::i;:::-;:28;6432:6;:42::i;:::-;6373:113;6496:9;6522:1;6515:4;6508:3;:11;:15;6496:27;;6578:4;6572:11;6654:6;6648:13;6746:4;6737:6;6729;6725:19;6721:30;6884:5;6876:4;6872:9;6865:4;6859:11;6855:27;6852:38;6846:4;6839:52;6932:4;6924:6;6920:17;6912:6;6905:33;6543:430;;;6990:4;6983:11;;;6254:748;;;;;:::o;3392:151::-;3445:9;3476:2;3471;:7;3467:49;;;3502:2;3495:9;;;;3467:49;3533:2;3526:9;;3392:151;;;;;:::o;3207:177::-;3283:19;3305:4;:8;;;3283:30;;3324:21;3329:4;3335:9;3324:4;:21::i;:::-;3356:20;3363:4;3369:6;3356;:20::i;:::-;;3207:177;;;:::o;195:1591:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "import \"./Ownable.sol\";\r\nimport \"./Destroyable.sol\";\r\nimport \"./provableAPI.sol\";\r\nimport \"./Accountable.sol\";\r\nimport \"./Winnable.sol\";\r\nimport \"./Randomised.sol\";\r\n\r\npragma solidity 0.5.12;\r\n\r\ncontract RollOut is Ownable, Destroyable, usingProvable, Accountable, Winnable, Randomised {\r\n\r\n    function rollIt(uint256 amountToBet, uint256 betChoice) public {\r\n\r\n        require(betChoice >= 1 && betChoice <= 6, \"Must choose between 1 and 6\");\r\n\r\n        uint256 betAmount = amountToBet * 1e15;         //takes integer and turns it into finney amount\r\n        uint256 queryPrice = getQueryPrice();\r\n\r\n        require(punters[msg.sender].balance - punters[msg.sender].pendingBets >= betAmount + queryPrice, \"Not enough liquidity\");\r\n        require(contractBalance - pendingPayouts >= (betAmount * 6) + queryPrice, \"Contract cannot cover bet\");\r\n\r\n        //instead of deducting from contract and player balances at start of bet, it is all handled at the end of the bet\r\n        //to ensure both the contract and player have enough liquidity to cover all bets (in the case of starting new bets while other bets are pending)\r\n        //the pending bet balances are included in the require statements above that check that there are enough funds to initiate a bet\r\n\r\n        pendingPayouts += ((betAmount * 6) + queryPrice);        //maximum payout amount ( + queryPrice) for this game is added to contract's pending bet balances, which is checked against all incoming bets\r\n        punters[msg.sender].pendingBets += (betAmount + queryPrice);       //betAmount ( + queryPrice) added to player's pending bets and deducted at conclusion of bet\r\n\r\n        requestNumber(msg.sender, 2, betAmount, betChoice, queryPrice);         //requestNumber function is in Randomised contract\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "D:\\Justin\\Documents\\Justin\\Ethereum\\blockPunt\\contracts\\RollOut.sol",
  "ast": {
    "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/RollOut.sol",
    "exportedSymbols": {
      "RollOut": [
        1358
      ]
    },
    "id": 1359,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 1246,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 884,
        "src": "0:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Destroyable.sol",
        "file": "./Destroyable.sol",
        "id": 1247,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 389,
        "src": "25:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 1248,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 8334,
        "src": "54:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Accountable.sol",
        "file": "./Accountable.sol",
        "id": 1249,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 289,
        "src": "83:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Winnable.sol",
        "file": "./Winnable.sol",
        "id": 1250,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 2044,
        "src": "112:24:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Randomised.sol",
        "file": "./Randomised.sol",
        "id": 1251,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 1245,
        "src": "138:26:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1252,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "168:23:8"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1253,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 883,
              "src": "215:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$883",
                "typeString": "contract Ownable"
              }
            },
            "id": 1254,
            "nodeType": "InheritanceSpecifier",
            "src": "215:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1255,
              "name": "Destroyable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 388,
              "src": "224:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destroyable_$388",
                "typeString": "contract Destroyable"
              }
            },
            "id": 1256,
            "nodeType": "InheritanceSpecifier",
            "src": "224:11:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1257,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8333,
              "src": "237:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$8333",
                "typeString": "contract usingProvable"
              }
            },
            "id": 1258,
            "nodeType": "InheritanceSpecifier",
            "src": "237:13:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1259,
              "name": "Accountable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 288,
              "src": "252:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Accountable_$288",
                "typeString": "contract Accountable"
              }
            },
            "id": 1260,
            "nodeType": "InheritanceSpecifier",
            "src": "252:11:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1261,
              "name": "Winnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2043,
              "src": "265:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Winnable_$2043",
                "typeString": "contract Winnable"
              }
            },
            "id": 1262,
            "nodeType": "InheritanceSpecifier",
            "src": "265:8:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1263,
              "name": "Randomised",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1244,
              "src": "275:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Randomised_$1244",
                "typeString": "contract Randomised"
              }
            },
            "id": 1264,
            "nodeType": "InheritanceSpecifier",
            "src": "275:10:8"
          }
        ],
        "contractDependencies": [
          288,
          388,
          883,
          1244,
          2043,
          8333
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1358,
        "linearizedBaseContracts": [
          1358,
          1244,
          2043,
          288,
          8333,
          388,
          883
        ],
        "name": "RollOut",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1356,
              "nodeType": "Block",
              "src": "358:1423:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1272,
                            "name": "betChoice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "379:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "392:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "379:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1275,
                            "name": "betChoice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "397:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "36",
                            "id": 1276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "410:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "397:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "379:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742063686f6f7365206265747765656e203120616e642036",
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "413:29:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b30b2a2928606f4619aefe3a2c4c73959c14b049cb30304d2222a641ffae3b1",
                          "typeString": "literal_string \"Must choose between 1 and 6\""
                        },
                        "value": "Must choose between 1 and 6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b30b2a2928606f4619aefe3a2c4c73959c14b049cb30304d2222a641ffae3b1",
                          "typeString": "literal_string \"Must choose between 1 and 6\""
                        }
                      ],
                      "id": 1271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8351,
                        8352
                      ],
                      "referencedDeclaration": 8352,
                      "src": "371:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "371:72:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "371:72:8"
                },
                {
                  "assignments": [
                    1283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1283,
                      "name": "betAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "456:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "456:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1287,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1284,
                      "name": "amountToBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "476:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653135",
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "490:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000_by_1",
                        "typeString": "int_const 1000000000000000"
                      },
                      "value": "1e15"
                    },
                    "src": "476:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "456:38:8"
                },
                {
                  "assignments": [
                    1289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1289,
                      "name": "queryPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "561:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "561:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1292,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1290,
                      "name": "getQueryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "582:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "582:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "561:36:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1294,
                                "name": "punters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "618:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Punter_$54_storage_$",
                                  "typeString": "mapping(address => struct Accountable.Punter storage ref)"
                                }
                              },
                              "id": 1297,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1295,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8348,
                                  "src": "626:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "626:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "618:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Punter_$54_storage",
                                "typeString": "struct Accountable.Punter storage ref"
                              }
                            },
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49,
                            "src": "618:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1299,
                                "name": "punters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "648:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Punter_$54_storage_$",
                                  "typeString": "mapping(address => struct Accountable.Punter storage ref)"
                                }
                              },
                              "id": 1302,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1300,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8348,
                                  "src": "656:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "656:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "648:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Punter_$54_storage",
                                "typeString": "struct Accountable.Punter storage ref"
                              }
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pendingBets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51,
                            "src": "648:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "618:61:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1305,
                            "name": "betAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1283,
                            "src": "683:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1306,
                            "name": "queryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "695:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "683:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "618:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f756768206c6971756964697479",
                        "id": 1309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:22:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
                          "typeString": "literal_string \"Not enough liquidity\""
                        },
                        "value": "Not enough liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
                          "typeString": "literal_string \"Not enough liquidity\""
                        }
                      ],
                      "id": 1293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8351,
                        8352
                      ],
                      "referencedDeclaration": 8352,
                      "src": "610:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:120:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "610:120:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1313,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "749:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1314,
                            "name": "pendingPayouts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "767:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "749:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1316,
                                  "name": "betAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "786:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "36",
                                  "id": 1317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "798:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "786:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1319,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "785:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1320,
                            "name": "queryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "803:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "785:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "749:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742063616e6e6f7420636f76657220626574",
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "815:27:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba560342882e3468e7f66e7d3b0c3adcb1c53a02b4fb7f31514cff08bdbd23d1",
                          "typeString": "literal_string \"Contract cannot cover bet\""
                        },
                        "value": "Contract cannot cover bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba560342882e3468e7f66e7d3b0c3adcb1c53a02b4fb7f31514cff08bdbd23d1",
                          "typeString": "literal_string \"Contract cannot cover bet\""
                        }
                      ],
                      "id": 1312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8351,
                        8352
                      ],
                      "referencedDeclaration": 8352,
                      "src": "741:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "741:102:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1325,
                  "nodeType": "ExpressionStatement",
                  "src": "741:102:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1326,
                      "name": "pendingPayouts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1273:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1327,
                                  "name": "betAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "1293:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "36",
                                  "id": 1328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1305:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "1293:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1330,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1292:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1331,
                            "name": "queryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "1310:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1292:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1333,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1291:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1273:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "1273:48:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1336,
                          "name": "punters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "1481:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Punter_$54_storage_$",
                            "typeString": "mapping(address => struct Accountable.Punter storage ref)"
                          }
                        },
                        "id": 1339,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8348,
                            "src": "1489:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1489:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1481:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Punter_$54_storage",
                          "typeString": "struct Accountable.Punter storage ref"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "pendingBets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "1481:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1341,
                            "name": "betAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1283,
                            "src": "1517:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1342,
                            "name": "queryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "1529:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1517:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1344,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1516:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1481:59:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:59:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8348,
                          "src": "1666:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1666:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1678:1:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "argumentTypes": null,
                        "id": 1351,
                        "name": "betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "1681:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1352,
                        "name": "betChoice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "1692:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1353,
                        "name": "queryPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "1703:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1347,
                      "name": "requestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "1652:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:62:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:62:8"
                }
              ]
            },
            "documentation": null,
            "id": 1357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rollIt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "name": "amountToBet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "311:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1268,
                  "name": "betChoice",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "332:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "310:40:8"
            },
            "returnParameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:8"
            },
            "scope": 1358,
            "src": "295:1486:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1359,
        "src": "195:1591:8"
      }
    ],
    "src": "0:1788:8"
  },
  "legacyAST": {
    "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/RollOut.sol",
    "exportedSymbols": {
      "RollOut": [
        1358
      ]
    },
    "id": 1359,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 1246,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 884,
        "src": "0:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Destroyable.sol",
        "file": "./Destroyable.sol",
        "id": 1247,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 389,
        "src": "25:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 1248,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 8334,
        "src": "54:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Accountable.sol",
        "file": "./Accountable.sol",
        "id": 1249,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 289,
        "src": "83:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Winnable.sol",
        "file": "./Winnable.sol",
        "id": 1250,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 2044,
        "src": "112:24:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Justin/Documents/Justin/Ethereum/blockPunt/contracts/Randomised.sol",
        "file": "./Randomised.sol",
        "id": 1251,
        "nodeType": "ImportDirective",
        "scope": 1359,
        "sourceUnit": 1245,
        "src": "138:26:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1252,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "168:23:8"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1253,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 883,
              "src": "215:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$883",
                "typeString": "contract Ownable"
              }
            },
            "id": 1254,
            "nodeType": "InheritanceSpecifier",
            "src": "215:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1255,
              "name": "Destroyable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 388,
              "src": "224:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destroyable_$388",
                "typeString": "contract Destroyable"
              }
            },
            "id": 1256,
            "nodeType": "InheritanceSpecifier",
            "src": "224:11:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1257,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8333,
              "src": "237:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$8333",
                "typeString": "contract usingProvable"
              }
            },
            "id": 1258,
            "nodeType": "InheritanceSpecifier",
            "src": "237:13:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1259,
              "name": "Accountable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 288,
              "src": "252:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Accountable_$288",
                "typeString": "contract Accountable"
              }
            },
            "id": 1260,
            "nodeType": "InheritanceSpecifier",
            "src": "252:11:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1261,
              "name": "Winnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2043,
              "src": "265:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Winnable_$2043",
                "typeString": "contract Winnable"
              }
            },
            "id": 1262,
            "nodeType": "InheritanceSpecifier",
            "src": "265:8:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1263,
              "name": "Randomised",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1244,
              "src": "275:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Randomised_$1244",
                "typeString": "contract Randomised"
              }
            },
            "id": 1264,
            "nodeType": "InheritanceSpecifier",
            "src": "275:10:8"
          }
        ],
        "contractDependencies": [
          288,
          388,
          883,
          1244,
          2043,
          8333
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1358,
        "linearizedBaseContracts": [
          1358,
          1244,
          2043,
          288,
          8333,
          388,
          883
        ],
        "name": "RollOut",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1356,
              "nodeType": "Block",
              "src": "358:1423:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1272,
                            "name": "betChoice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "379:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "392:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "379:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1275,
                            "name": "betChoice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "397:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "36",
                            "id": 1276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "410:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "397:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "379:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742063686f6f7365206265747765656e203120616e642036",
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "413:29:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b30b2a2928606f4619aefe3a2c4c73959c14b049cb30304d2222a641ffae3b1",
                          "typeString": "literal_string \"Must choose between 1 and 6\""
                        },
                        "value": "Must choose between 1 and 6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b30b2a2928606f4619aefe3a2c4c73959c14b049cb30304d2222a641ffae3b1",
                          "typeString": "literal_string \"Must choose between 1 and 6\""
                        }
                      ],
                      "id": 1271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8351,
                        8352
                      ],
                      "referencedDeclaration": 8352,
                      "src": "371:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "371:72:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "371:72:8"
                },
                {
                  "assignments": [
                    1283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1283,
                      "name": "betAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "456:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "456:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1287,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1284,
                      "name": "amountToBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "476:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653135",
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "490:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000_by_1",
                        "typeString": "int_const 1000000000000000"
                      },
                      "value": "1e15"
                    },
                    "src": "476:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "456:38:8"
                },
                {
                  "assignments": [
                    1289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1289,
                      "name": "queryPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "561:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "561:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1292,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1290,
                      "name": "getQueryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "582:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "582:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "561:36:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1294,
                                "name": "punters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "618:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Punter_$54_storage_$",
                                  "typeString": "mapping(address => struct Accountable.Punter storage ref)"
                                }
                              },
                              "id": 1297,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1295,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8348,
                                  "src": "626:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "626:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "618:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Punter_$54_storage",
                                "typeString": "struct Accountable.Punter storage ref"
                              }
                            },
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49,
                            "src": "618:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1299,
                                "name": "punters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "648:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Punter_$54_storage_$",
                                  "typeString": "mapping(address => struct Accountable.Punter storage ref)"
                                }
                              },
                              "id": 1302,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1300,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8348,
                                  "src": "656:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "656:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "648:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Punter_$54_storage",
                                "typeString": "struct Accountable.Punter storage ref"
                              }
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pendingBets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51,
                            "src": "648:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "618:61:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1305,
                            "name": "betAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1283,
                            "src": "683:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1306,
                            "name": "queryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "695:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "683:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "618:87:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f756768206c6971756964697479",
                        "id": 1309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:22:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
                          "typeString": "literal_string \"Not enough liquidity\""
                        },
                        "value": "Not enough liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
                          "typeString": "literal_string \"Not enough liquidity\""
                        }
                      ],
                      "id": 1293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8351,
                        8352
                      ],
                      "referencedDeclaration": 8352,
                      "src": "610:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:120:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "610:120:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1313,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "749:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1314,
                            "name": "pendingPayouts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "767:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "749:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1316,
                                  "name": "betAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "786:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "36",
                                  "id": 1317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "798:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "786:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1319,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "785:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1320,
                            "name": "queryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "803:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "785:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "749:64:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742063616e6e6f7420636f76657220626574",
                        "id": 1323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "815:27:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba560342882e3468e7f66e7d3b0c3adcb1c53a02b4fb7f31514cff08bdbd23d1",
                          "typeString": "literal_string \"Contract cannot cover bet\""
                        },
                        "value": "Contract cannot cover bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba560342882e3468e7f66e7d3b0c3adcb1c53a02b4fb7f31514cff08bdbd23d1",
                          "typeString": "literal_string \"Contract cannot cover bet\""
                        }
                      ],
                      "id": 1312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8351,
                        8352
                      ],
                      "referencedDeclaration": 8352,
                      "src": "741:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "741:102:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1325,
                  "nodeType": "ExpressionStatement",
                  "src": "741:102:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1326,
                      "name": "pendingPayouts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1273:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1327,
                                  "name": "betAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "1293:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "36",
                                  "id": 1328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1305:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "1293:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1330,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1292:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1331,
                            "name": "queryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "1310:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1292:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1333,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1291:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1273:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "1273:48:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1336,
                          "name": "punters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "1481:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Punter_$54_storage_$",
                            "typeString": "mapping(address => struct Accountable.Punter storage ref)"
                          }
                        },
                        "id": 1339,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8348,
                            "src": "1489:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1489:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1481:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Punter_$54_storage",
                          "typeString": "struct Accountable.Punter storage ref"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "pendingBets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "1481:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1341,
                            "name": "betAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1283,
                            "src": "1517:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1342,
                            "name": "queryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "1529:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1517:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1344,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1516:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1481:59:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:59:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8348,
                          "src": "1666:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1666:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1678:1:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "argumentTypes": null,
                        "id": 1351,
                        "name": "betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "1681:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1352,
                        "name": "betChoice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1268,
                        "src": "1692:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1353,
                        "name": "queryPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "1703:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1347,
                      "name": "requestNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "1652:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:62:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:62:8"
                }
              ]
            },
            "documentation": null,
            "id": 1357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rollIt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "name": "amountToBet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "311:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1268,
                  "name": "betChoice",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "332:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "310:40:8"
            },
            "returnParameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "358:0:8"
            },
            "scope": 1358,
            "src": "295:1486:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1359,
        "src": "195:1591:8"
      }
    ],
    "src": "0:1788:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x680397c45077ee300a8ffc23b8df8f67de5ada41abab7430a35945e03c283cb3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountBet",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "balanceBeforeBet",
              "type": "uint256"
            }
          ],
          "name": "BetPlaced",
          "type": "event",
          "signature": "0x680397c45077ee300a8ffc23b8df8f67de5ada41abab7430a35945e03c283cb3"
        },
        "0x9ca86e26e8d02952f920895df7583aa717e8ebc63cd0708c0879da89b9a07445": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "toAccount",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountWithdrawn",
              "type": "uint256"
            }
          ],
          "name": "ContractBalanceWithdrawn",
          "type": "event",
          "signature": "0x9ca86e26e8d02952f920895df7583aa717e8ebc63cd0708c0879da89b9a07445"
        },
        "0x350a7000a835544193f030ad53ca1f667390855a6373fd43a2a998c98bfbf856": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "fromAccount",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountDeposited",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256"
            }
          ],
          "name": "ContractDepositMade",
          "type": "event",
          "signature": "0x350a7000a835544193f030ad53ca1f667390855a6373fd43a2a998c98bfbf856"
        },
        "0x4e6e157208fe7c34d5edbf2d0b2a80c3f7aed8ff1c22154100a9f09280c8e2c7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "latestNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "drawCard_2",
              "type": "uint256"
            }
          ],
          "name": "DrawCard_2_Received",
          "type": "event",
          "signature": "0x4e6e157208fe7c34d5edbf2d0b2a80c3f7aed8ff1c22154100a9f09280c8e2c7"
        },
        "0x3f49e8a1c02bb092374df7b4bf984f5f1e89085d4745000dd2d8507511083b06": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "houseCard",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "userCard",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "choseHigher",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "betAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "payOutAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "winner",
              "type": "string"
            }
          ],
          "name": "DrawOutResults",
          "type": "event",
          "signature": "0x3f49e8a1c02bb092374df7b4bf984f5f1e89085d4745000dd2d8507511083b06"
        },
        "0x3e0b428f99f88317a267eb30f49f168a7d82cb56220b5e3c4ebfba8c71c4dfca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "latestNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "Heads1orTails0",
              "type": "uint256"
            }
          ],
          "name": "FlipNumberReceived",
          "type": "event",
          "signature": "0x3e0b428f99f88317a267eb30f49f168a7d82cb56220b5e3c4ebfba8c71c4dfca"
        },
        "0x0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "flipResult",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "choice",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "winner",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "betAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "payOutAmount",
              "type": "uint256"
            }
          ],
          "name": "FlipOutResults",
          "type": "event",
          "signature": "0x0c9a151e6d7e4ad0bcfa7a62050b282805d04c54e59654db19dbadd7cb377a9c"
        },
        "0xeaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "toAccount",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountWithdrawn",
              "type": "uint256"
            }
          ],
          "name": "FundsWithdrawn",
          "type": "event",
          "signature": "0xeaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d"
        },
        "0x4abcbda462a94726d98871d89dc3d68df4c87af956c88bff9e26eb6fd8f8d249": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "latestNumber",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "diceNumber",
              "type": "uint256"
            }
          ],
          "name": "RollNumberReceived",
          "type": "event",
          "signature": "0x4abcbda462a94726d98871d89dc3d68df4c87af956c88bff9e26eb6fd8f8d249"
        },
        "0xf0f1a71001487cdd2b5333e3fe895c9deb3fd1ed644fc1563fd75591b714062a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "queryId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "rollResult",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "choice",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "winner",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "betAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "payOutAmount",
              "type": "uint256"
            }
          ],
          "name": "RollOutResults",
          "type": "event",
          "signature": "0xf0f1a71001487cdd2b5333e3fe895c9deb3fd1ed644fc1563fd75591b714062a"
        },
        "0x155efc6f27878074d7b21fde35c660b361cb83869a21c2409ed1a562f17e1729": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "fromAccount",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountDeposited",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256"
            }
          ],
          "name": "UserDepositMade",
          "type": "event",
          "signature": "0x155efc6f27878074d7b21fde35c660b361cb83869a21c2409ed1a562f17e1729"
        }
      },
      "links": {},
      "address": "0x7fcDe9E3BaaA63fE07D12b4Eb185cb4768132d42",
      "transactionHash": "0xe4b6245a364964446ec607409f414814089847b4885cace01b515d370abe50b5"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-10-24T08:19:39.225Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}